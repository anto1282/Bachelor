//Profile config names for nf-core/configs
conda.enabled = true
conda.channels = ["defaults", "bioconda", "conda-forge"]
profiles{
    local{
        process.executor = 'local'
        params{
            max_memory = 16.GB
            max_cpus = 8
            max_time = 20.h

            IDS = "NOID"
            outdir = "./Results"
            krakDB = "${projectDir}/../KrakenDB"
            samplerate = 0.3
            sampleseed = 5
            server = false
            cutoff = 0.7
            phaDB = "PHAROKKADB"
            DVFPath = "${projectDir}/../DeepVirFinder/dvf.py"
            checkVDB = "~/Bachelor/checkv-db-v1.5"
            refGenome = ""
            minLength = 300
            contigs = "scaffolds"
            }
    }

    cluster {
        params {
            max_memory = 1000.GB
            max_cpus = 50
            max_time = 720.h
            
            IDS = "NOID"
            outdir = "./Results"
            krakDB = "/maps/projects/mjolnir1/data/databases/kraken2/kraken2_standard/20220926"
            server = true
            cutoff = 0.7
            phaDB = "/maps/projects/mjolnir1/apps/conda/pharokka-1.2.1/pharokka_v1.2.0_databases"
            DATABASEDIR = "/maps/projects/mjolnir1/data/databases"
            DVFPath = "dvf.py"
            iphopDB = "/maps/projects/mjolnir1/data/databases/iphop/20230317/Sept_2021_pub"
            checkVDB = "/maps/projects/mjolnir1/data/databases/checkv/20230320/checkv-db-v1.5"
            virsorterDB = "/maps/projects/mjolnir1/data/databases/virsorter/20230317/"
            refGenome = ""
            accessToken = "writeTokenInTerminal"
            basepath = "/maps"
            minLength = 1000
            contigs = "scaffolds"
            }
        singularity {

                enabled = true
                autoMounts = true
                runOptions = "-B ${params.basepath}"
                cacheDir = '/maps/projects/mjolnir1/data/cache/nf-core/singularity'
                
        }

        process {
            errorStrategy = 'finish'
            executor = 'slurm'
            cpus = 4
            memory = 4.GB
            time = 1.h}
        
        
        //cleanup = true
            
        executor {
        queueSize = 10}

        cache = 'lenient'
        
        tower {
            enabled = true
            accessToken = params.accessToken}
    }
}

process {

    withLabel:bigTask {
        cpus = 16
        memory = 32.GB
        time = 3.h}

    withLabel:gpuTask {
        cpus = 16
        memory = 32.GB
        time = 3.h}

    withLabel:shortTask {
        cpus = 4
        memory = 4.GB
        time = 1.h}
}
